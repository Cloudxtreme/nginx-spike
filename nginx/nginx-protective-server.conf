# The application server
upstream my_test_app_server {
	server localhost:8080;
}

# Rate-limit zone definition for the back end reverse proxy
# this protects the application server from excessive requests
# so has lower limits
limit_req_zone $binary_remote_addr zone=back_end_user:10m rate=10r/s;
limit_conn_zone $binary_remote_addr zone=back_end_addr:10m;

# The reverse proxy that talks to the application server
# it also sets a cache header to instruct the front caching-server
# to cache responses
server {
	listen localhost:9080;
	proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
	proxy_redirect off;
	proxy_buffering off;
	proxy_set_header        Host            $host;
	proxy_set_header        X-Real-IP       $remote_addr;
	proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;

	# Enable rate-limiting
	limit_req zone=back_end_user burst=50;
	#limit_conn back_end_addr 5;

	# Set cache headers - indicates to clients that caching is possible
	# Different resources can have different cache expiries
	location / {
		proxy_pass  http://my_test_app_server;
		expires -1; # The default is not to cache
	}

	location /snail {
		proxy_pass  http://my_test_app_server/snail;
		expires 60;
	}

	location /tortoise {
		proxy_pass  http://my_test_app_server/tortoise;
		expires 10;
	}

	location /hare {
		proxy_pass  http://my_test_app_server/hare;
		expires 3;
	}
}



# Rate-limit zone definition for the front-end
# Since we hope this will serve up cache hits
# it can sustain a high number of requests
limit_req_zone $binary_remote_addr zone=front_end_user:10m rate=100r/s;
limit_conn_zone $binary_remote_addr zone=front_end_addr:10m;

# Caching definition
## The path must exist (directory)
proxy_cache_path /tmp/nginx-cache keys_zone=MY_CACHE:10m;
proxy_temp_path /tmp/nginx;

# The front end caching server, forwards cache-misses to the 
# back-end reverse proxy.  Also includes DoS protection
server {
	listen localhost:80;
        location / {
                proxy_pass  http://localhost:9080;
                proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
                proxy_redirect off;
                proxy_buffering on; # Must be _on_ for proxy_cache to work
                proxy_set_header        Host            $host;
                proxy_set_header        X-Real-IP       $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
	}
	# Enable caching
        add_header Cache-Control public;
        add_header X-Cache-Status $upstream_cache_status;
#       proxy_cache_key "$request_uri";
        proxy_cache MY_CACHE;
#       proxy_cache_bypass $arg_nocache;
#       proxy_cache_bypass $http_pragma $http_authorization;
#       proxy_cache_valid 15s;
#       proxy_cache_valid 404 1m;

	# Enable rate-limiting
	limit_req zone=front_end_user burst=200;
	limit_conn front_end_addr 50;
}

